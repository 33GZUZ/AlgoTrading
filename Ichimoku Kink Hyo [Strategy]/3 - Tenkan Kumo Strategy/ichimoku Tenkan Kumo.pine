// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© Salih Emin (cerebrux)

//@version=5
strategy('Ichimoku Kinko Hyo: Tenakan Kumo Strategy', overlay=true, default_qty_value = 100, default_qty_type = strategy.percent_of_equity, initial_capital = 1000)
// Trading periods
start = timestamp(2017, 6, 1, 0, 0) // use data from 2000
end = timestamp(2099, 6, 1, 0, 0) // until 2099
//Inputs
Tenkan_sen = input.int(9, minval=1, title='Tenkan-Sen')
Kijun_sen = input.int(26, minval=1, title='Kijun-Sen')
Senku_spanB = input.int(52, minval=1, title='Senkou-Span B')
Chiku_span_offset = input.int(26, minval=1, title='Chikou-Span Offset')
Kumo_offset = input.int(26, minval=1, title='Kumo Offset')

middle(len) => math.avg(ta.lowest(len), ta.highest(len))

// Ichimoku Components
tenkan = middle(Tenkan_sen)
kijun = middle(Kijun_sen)
senkouA = math.avg(tenkan, kijun)
senkouB = middle(Senku_spanB)

// Plot Ichimoku Kinko Hyo
plot(tenkan, color=color.new(#0496ff, 0), title='Tenkan-Sen')
plot(kijun, color=color.new(#991515, 0), title='Kijun-Sen')
plot(close, offset=-Chiku_span_offset + 1, color=color.new(#459915, 0), title='Chikou-Span')
senkouAplot = plot(senkouA, offset=Kumo_offset - 1, color=color.new(color.green, 0), title='Senkou-Span A')
senkouBplot = plot(senkouB, offset=Kumo_offset - 1, color=color.new(color.red, 0), title='Senkou-Span B')
fill(senkouAplot, senkouBplot, color = senkouA > senkouB ? color.rgb(67, 160, 71, 90) : color.rgb(244, 67, 54, 90), title='Cloud color')

ss_high = math.max(senkouA[Kumo_offset - 1], senkouB[Kumo_offset - 1])
ss_low = math.min(senkouA[Kumo_offset - 1], senkouB[Kumo_offset - 1])

// Entry Signals

// Conditions for Long
long_entry = input(true, title='Long Entry')
tk_cross_bull = tenkan > kijun
tenkan_above_kumo = tenkan > ss_high

// long signal when above conditions allign
bullish = tk_cross_bull and tenkan_above_kumo

// Conditions for Short
short_entry = input(true, title='Short Entry')
tk_cross_bear = tenkan < kijun
tenkan_below_kumo = tenkan < ss_low

// short signal when above conditions allign
bearish = tk_cross_bear and tenkan_below_kumo

//Closing conditions
closeLong = tk_cross_bear
closeShort = tk_cross_bull

// Signals Long
if time >= start and time <= end // trade only on the specified period
    strategy.entry('Long', strategy.long, when=bullish)
    strategy.close('Long', when=closeLong, qty_percent = 100, comment = "close buy entry")
    
    strategy.entry('Short', strategy.short, when=bearish)
    strategy.close('Short', when=closeShort, qty_percent = 100, comment = "close short entry")
